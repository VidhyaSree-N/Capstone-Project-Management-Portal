<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login Page</title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <style>
    .login-container {
      border: 1px solid #ccc;
      padding: 20px;
      max-width: 400px;
      margin: 0 auto;
      margin-top: 100px;
    }
  </style>
</head>
<body>
    
    <form id="login-form" class="login-container" method="POST" action="api/auth/login">
      <h1>Login</h1>
      
      <label for="email">Email:</label>
      <input type="email" name="email" class="form-control" placeholder="Enter email" id="email" required><br><br>
      <label for="password">Password:</label>
      <input type="password" class="form-control" placeholder="Enter password" name="password" id="password" required><br><br>
      <button type="submit" class="btn btn-primary">Login</button>
    </form>

    <script>
      const form = document.getElementById('login-form');
      form.addEventListener('submit', handleSubmit);
  
      function handleSubmit(event) {
        event.preventDefault(); // prevent the form from submitting normally
        
        // get the form data

        const formData = {
          email: event.target.elements['email'].value,
          password: event.target.elements['password'].value
          };
        
        // make the AJAX request
        fetch(event.target.action, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
          },
      body: JSON.stringify(formData)
      })
      .then(response => {
        if (response.ok) {
          // login successful
          return response.json();
        } else {
          // login failed, handle the error
          throw new Error('Login failed');
        }
      })
      .then(data => {
        // save the token to a cookie
        document.cookie = `token=${data.token}; Secure`;
        
        window.location.href = '/dashboard';
      })
      .catch(error => {
        // handle the error
        console.error(error);
        alert('Login failed. Please try again.');
      });
    }
    </script>
  </body>
</html>
