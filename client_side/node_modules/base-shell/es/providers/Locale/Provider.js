import React, { useState, useEffect } from 'react';
import Context from './Context';

var Provider = function Provider(_ref) {
  var children = _ref.children,
      _ref$defaultLocale = _ref.defaultLocale,
      defaultLocale = _ref$defaultLocale === void 0 ? 'en' : _ref$defaultLocale,
      _ref$persistKey = _ref.persistKey,
      persistKey = _ref$persistKey === void 0 ? 'locale' : _ref$persistKey;
  var persistLocale = localStorage.getItem(persistKey);

  var _useState = useState(persistLocale || defaultLocale),
      locale = _useState[0],
      setLocale = _useState[1];

  useEffect(function () {
    try {
      localStorage.setItem(persistKey, locale);
    } catch (error) {
      console.warn(error);
    }
  }, [locale, persistKey]);
  return /*#__PURE__*/React.createElement(Context.Provider, {
    value: {
      locale: locale,
      setLocale: setLocale
    }
  }, children);
};

export default Provider;