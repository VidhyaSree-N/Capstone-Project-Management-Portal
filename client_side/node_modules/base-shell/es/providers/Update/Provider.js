import React, { useState, useEffect } from 'react';
import Context from './Context';

var runUpdate = function runUpdate(registration) {
  try {
    if (registration) {
      registration.waiting.postMessage({
        type: 'SKIP_WAITING'
      });
    }

    if (window.update) {
      window.update && window.update();
    }
  } catch (error) {
    console.log(error);
  }
};

var Provider = function Provider(_ref) {
  var children = _ref.children,
      checkInterval = _ref.checkInterval;

  var _useState = useState(false),
      isUpdateAvailable = _useState[0],
      setUpdateAvailable = _useState[1];

  var checkUpdate = function checkUpdate() {
    if (window.update) {
      setUpdateAvailable(true);
    } else {
      setUpdateAvailable(false);
      setTimeout(checkUpdate, checkInterval);
    }
  };

  useEffect(checkUpdate, [checkUpdate]);
  return /*#__PURE__*/React.createElement(Context.Provider, {
    value: {
      isUpdateAvailable: isUpdateAvailable,
      runUpdate: runUpdate
    }
  }, children);
};

export default Provider;