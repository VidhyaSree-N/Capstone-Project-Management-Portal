"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _Context = _interopRequireDefault(require("./Context"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function reducer(state, action) {
  var type = action.type,
      auth = action.auth;

  switch (type) {
    case 'SET_AUTH':
      return auth;

    case 'UPDATE_AUTH':
      return _extends({}, state, auth);

    default:
      throw new Error();
  }
}

var Provider = function Provider(_ref) {
  var _ref$persistKey = _ref.persistKey,
      persistKey = _ref$persistKey === void 0 ? 'auth' : _ref$persistKey,
      children = _ref.children;
  var persistAuth = JSON.parse(localStorage.getItem(persistKey));

  var _useReducer = (0, _react.useReducer)(reducer, persistAuth || {}),
      auth = _useReducer[0],
      dispatch = _useReducer[1];

  (0, _react.useEffect)(function () {
    try {
      localStorage.setItem(persistKey, JSON.stringify(auth));
    } catch (error) {
      console.warn(error);
    }
  }, [auth, persistKey]);

  var setAuth = function setAuth(auth) {
    dispatch({
      type: 'SET_AUTH',
      auth: auth
    });
  };

  var updateAuth = function updateAuth(auth) {
    dispatch({
      type: 'UPDATE_AUTH',
      auth: auth
    });
  };

  return /*#__PURE__*/_react["default"].createElement(_Context["default"].Provider, {
    value: {
      auth: auth,
      setAuth: setAuth,
      updateAuth: updateAuth
    }
  }, children);
};

var _default = Provider;
exports["default"] = _default;
module.exports = exports.default;