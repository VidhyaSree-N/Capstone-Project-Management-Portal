{"ast":null,"code":"var _jsxFileName = \"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/SelectProjectsForCourse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/ProjectSelectionPopup.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport ErrorMessagePopup from \"./ErrorMessagePopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelectProjectsForCourse(_ref) {\n  _s();\n  let {\n    projects,\n    name,\n    setData\n  } = _ref;\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(false);\n  const [selectedProjects, setSelectedProjects] = useState([]);\n  const [allProjects, setAllProjects] = useState([]);\n  useEffect(() => {\n    // set the initially selected projects\n    setSelectedProjects(projects.map(project => project._id));\n    async function getAllProjects() {\n      try {\n        const response = await axios.get(\"/api/projects\");\n        setAllProjects(response.data);\n      } catch (err) {\n        navigate('/signin', {\n          replace: true\n        });\n      }\n    }\n    getAllProjects();\n  }, [projects, navigate]);\n  const handleProjectSelection = event => {\n    const projectId = event.target.value;\n    if (event.target.checked) {\n      setSelectedProjects(prevState => [...prevState, projectId]);\n    } else {\n      setSelectedProjects(prevState => prevState.filter(id => id !== projectId));\n    }\n  };\n  const handleSubmit = async () => {\n    try {\n      console.log(selectedProjects);\n      const response = await axios.put(`/api/courses/${name}`, {\n        projects: selectedProjects\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        setData(response.data);\n        onClose();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const onClose = () => {\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpen(true),\n      children: \" Add Projects \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-list\",\n          children: allProjects.map(project => {\n            const isChecked = selectedProjects.includes(project._id);\n            return /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                value: project._id,\n                checked: isChecked,\n                onChange: handleProjectSelection\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 13\n              }, this), project.name]\n            }, project._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectProjectsForCourse, \"d8VClNvIGf1Jwmv3qpDFRP9Zoqs=\", false, function () {\n  return [useNavigate];\n});\n_c = SelectProjectsForCourse;\nvar _c;\n$RefreshReg$(_c, \"SelectProjectsForCourse\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","ErrorMessagePopup","jsxDEV","_jsxDEV","SelectProjectsForCourse","_ref","_s","projects","name","setData","navigate","open","setOpen","selectedProjects","setSelectedProjects","allProjects","setAllProjects","map","project","_id","getAllProjects","response","get","data","err","replace","handleProjectSelection","event","projectId","target","value","checked","prevState","filter","id","handleSubmit","console","log","put","headers","status","onClose","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","isChecked","includes","type","onChange","_c","$RefreshReg$"],"sources":["/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/SelectProjectsForCourse.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/ProjectSelectionPopup.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport ErrorMessagePopup from \"./ErrorMessagePopup\";\n\nexport default function SelectProjectsForCourse({ projects , name, setData}) {\n\n\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(false);\n  const [selectedProjects, setSelectedProjects] = useState([]);\n  const [allProjects, setAllProjects] = useState([]);\n\n  useEffect(() => {\n    // set the initially selected projects\n    setSelectedProjects(projects.map((project) => project._id));\n    \n    async function getAllProjects() {\n        try {\n            const response = await axios.get(\"/api/projects\");\n            setAllProjects(response.data);\n        } catch (err) {\n            navigate('/signin', {replace: true});\n        }\n    }\n\n    getAllProjects();\n\n  }, [projects, navigate]);\n\n  const handleProjectSelection = (event) => {\n    const projectId = event.target.value;\n    if (event.target.checked) {\n      setSelectedProjects((prevState) => [...prevState, projectId]);\n    } else {\n      setSelectedProjects((prevState) =>\n        prevState.filter((id) => id !== projectId)\n      );\n    }\n  };\n\n  const handleSubmit = async() => {\n    try {\n        \n        console.log(selectedProjects);\n        const response = await axios.put(`/api/courses/${name}`, { projects: selectedProjects },\n        { headers: { 'Content-Type': 'application/json' } });\n        \n\n        if (response.status === 200) {\n            setData(response.data);\n            onClose();\n        }\n        \n\n    } catch (err) {\n        console.log(err);\n    }\n  };\n\n  const onClose = () => {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n\n    \n    <button onClick={()=>setOpen(true)}> Add Projects </button>\n    {open && \n      (<div className=\"popup-background\">\n      <div className=\"popup-content\">\n        <h2>Select Projects</h2>\n        <div className=\"project-list\">\n        {allProjects.map((project) => {\n            const isChecked = selectedProjects.includes(project._id);\n            return (<label key={project._id}>\n            <input\n                type=\"checkbox\"\n                value={project._id}\n                checked={isChecked}\n                onChange={handleProjectSelection}\n            />\n            {project.name}\n            </label>\n            )} ) }\n        </div>\n        <button onClick={handleSubmit}>Submit</button>\n        <button onClick={onClose}>Cancel</button>\n      </div>\n    </div>)}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}