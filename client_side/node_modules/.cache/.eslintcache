[{"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/index.js":"1","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/App.js":"2","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/HomePage.js":"3","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/SigninPage.js":"4","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/PageNotFound.js":"5","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/DashBoardPage.js":"6","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/ForgotPasswordPage.js":"7","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/CoursesPage.js":"8","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/ProjectPage.js":"9","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/CoursePage.js":"10","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/AdminCousesPage.js":"11","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/StudentCoursesPage.js":"12","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/Dashboard/ClientDashboard.js":"13","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/Dashboard/AdminDashboard.js":"14","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forgot-my-password/formResetPassword.js":"15","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forgot-my-password/noteCheckYourEmail.js":"16","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/project/PendingProjects.js":"17","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/project/ActiveProjects.js":"18","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/project/PublishProjects.js":"19","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/courses/CoursesAssignment.js":"20","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/courses/CoursesProjects.js":"21","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/courses/CoursesStudents.js":"22","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/Footer/footer.js":"23","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/Header/navbar.js":"24","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/project/ProjectPreview.js":"25","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/deleteCourseForm.js":"26","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/SendInviteLinkForm.js":"27","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/PublishProjectForm.js":"28","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/ConfimationPopup.js":"29","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/project/PdfPreview.js":"30","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/InviteLinkStudent.js":"31","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/SelectProjectsForCourse.js":"32","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/DeleteStudentForm.js":"33","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/courses/stages/StageTwo.js":"34","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/courses/stages/StageOne.js":"35","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/ErrorMessagePopup.js":"36","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/CreateCourseForm.js":"37"},{"size":163,"mtime":1683512183822,"results":"38","hashOfConfig":"39"},{"size":2148,"mtime":1683512183805,"results":"40","hashOfConfig":"39"},{"size":479,"mtime":1683512183822,"results":"41","hashOfConfig":"39"},{"size":1973,"mtime":1683512183822,"results":"42","hashOfConfig":"39"},{"size":126,"mtime":1683512183822,"results":"43","hashOfConfig":"39"},{"size":596,"mtime":1683512183822,"results":"44","hashOfConfig":"39"},{"size":482,"mtime":1683512183822,"results":"45","hashOfConfig":"39"},{"size":940,"mtime":1683512183822,"results":"46","hashOfConfig":"39"},{"size":1682,"mtime":1683590624575,"results":"47","hashOfConfig":"39"},{"size":1743,"mtime":1683512183822,"results":"48","hashOfConfig":"39"},{"size":2273,"mtime":1683568754625,"results":"49","hashOfConfig":"39"},{"size":2283,"mtime":1683512183822,"results":"50","hashOfConfig":"39"},{"size":1661,"mtime":1683512183818,"results":"51","hashOfConfig":"39"},{"size":188,"mtime":1683512183818,"results":"52","hashOfConfig":"39"},{"size":5033,"mtime":1683512183819,"results":"53","hashOfConfig":"39"},{"size":3188,"mtime":1683512183820,"results":"54","hashOfConfig":"39"},{"size":2944,"mtime":1683512183822,"results":"55","hashOfConfig":"39"},{"size":9534,"mtime":1683591181995,"results":"56","hashOfConfig":"39"},{"size":2801,"mtime":1683512183822,"results":"57","hashOfConfig":"39"},{"size":423,"mtime":1683512183819,"results":"58","hashOfConfig":"39"},{"size":1406,"mtime":1683512183819,"results":"59","hashOfConfig":"39"},{"size":1062,"mtime":1683512183819,"results":"60","hashOfConfig":"39"},{"size":2039,"mtime":1683591581824,"results":"61","hashOfConfig":"39"},{"size":4150,"mtime":1683512183819,"results":"62","hashOfConfig":"39"},{"size":1984,"mtime":1683512183822,"results":"63","hashOfConfig":"39"},{"size":1832,"mtime":1683512183821,"results":"64","hashOfConfig":"39"},{"size":3077,"mtime":1683512183821,"results":"65","hashOfConfig":"39"},{"size":29274,"mtime":1683588940552,"results":"66","hashOfConfig":"39"},{"size":486,"mtime":1683512183820,"results":"67","hashOfConfig":"39"},{"size":1500,"mtime":1683512183822,"results":"68","hashOfConfig":"39"},{"size":2974,"mtime":1683512183821,"results":"69","hashOfConfig":"39"},{"size":2578,"mtime":1683512183821,"results":"70","hashOfConfig":"39"},{"size":1798,"mtime":1683512183821,"results":"71","hashOfConfig":"39"},{"size":4619,"mtime":1683512183819,"results":"72","hashOfConfig":"39"},{"size":3145,"mtime":1683512183819,"results":"73","hashOfConfig":"39"},{"size":539,"mtime":1683512183821,"results":"74","hashOfConfig":"39"},{"size":2780,"mtime":1683575513455,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"2smrxg",{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"79"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"79"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"79"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"79"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"79"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"79"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"79"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"79"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"79"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"79"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"79"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"79"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"79"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/index.js",[],[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/App.js",["204"],[],"import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport SigninPage from \"./pages/SigninPage\";\nimport ForgotPasswordPage from './pages/ForgotPasswordPage';\nimport PageNotFound from './pages/PageNotFound';\nimport DashBoardPage from './pages/DashBoardPage';\nimport ProjectPage from 'pages/ProjectPage';\nimport jwt_decode from 'jwt-decode';\nimport CoursesPage from 'pages/CoursesPage';\nimport CoursePage from 'pages/CoursePage';\n\nfunction App() {\n\n  const isAdmin = (nextState, replace) => {\n    try {\n      const token = document.cookie.split('; ').find(row => row.startsWith('token=')).split('=')[1];\n      const decodedToken = jwt_decode(token);\n      const role = decodedToken.role;\n      if (role !== \"ADMIN\") {\n        replace({\n          pathname: '/dashboard',\n          state: { nextPathname: nextState.location.pathname },\n        });\n      } \n    } catch (err) {\n      replace({\n        pathname: '/signin',\n        state: { nextPathname: nextState.location.pathname },\n      });\n    } \n  }\n\n  const isLoggedIn = (nextState, replace) => {\n    try {\n      const token = document.cookie.split('; ').find(row => row.startsWith('token=')).split('=')[1];\n      const decodedToken = jwt_decode(token);\n      const role = decodedToken.role;\n    } catch (err) {\n      replace({\n        pathname: '/signin',\n        state: { nextPathname: nextState.location.pathname },\n      });\n    }\n  }\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/signin\" element={<SigninPage />} />\n        <Route path=\"/forgot-password\" element={<ForgotPasswordPage />} />\n        <Route path=\"/project\" element={<ProjectPage />} onEnter={isAdmin} />\n        <Route path=\"/dashboard\" element={<DashBoardPage />} onEnter={isLoggedIn} />\n        <Route path=\"/courses\" element={<CoursesPage />} onEnter={isLoggedIn} />\n        <Route path=\"/courses/:name\" element={<CoursePage />}  onEnter={isLoggedIn} />\n        <Route path='*' element={<PageNotFound />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/HomePage.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/SigninPage.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/PageNotFound.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/DashBoardPage.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/ForgotPasswordPage.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/CoursesPage.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/ProjectPage.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/CoursePage.js",["205"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport CoursesAssignment from \"../components/courses/CoursesAssignment\";\nimport CoursesProject from \"../components/courses/CoursesProjects\";\nimport CoursesStudents from \"../components/courses/CoursesStudents\";\n\nexport default function CoursePage() {\n  const { name } = useParams();\n  const [component, setComponent] = useState(1);\n  const [course, setCourse] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchCourse() {\n      try {\n        const response = await axios.get(`/api/courses/${name}`);\n        if (response.status === 200) {\n          setCourse(response.data);\n          console.log(response.data);\n        }\n      } catch (error) {\n        console.log(error);\n        navigate(\"/signin\", {replace: true});\n      }\n    }\n\n    fetchCourse();\n  }, [name]);\n\n\n  function renderComponent(course) {\n    console.log(\"Rendering component with course:\", course);\n    switch (component) {\n      case 1:\n        return <CoursesStudents course={course} />;\n      case 2:\n        return <CoursesProject course={course} />;\n      case 3:\n        return <CoursesAssignment course={course} />;\n      default:\n        return <CoursesStudents course={course} />;\n    }\n  }\n  \n\n  return (\n    <div>\n      <div>\n        <div onClick={() => setComponent(1)}>Students</div>\n        <div onClick={() => setComponent(2)}>Projects</div>\n        <div onClick={() => setComponent(3)}>\n          Assign Projects to Students\n        </div>\n      </div>\n      {course ? renderComponent(course) : <div>Loading...</div>}\n    </div>\n  );\n  \n}\n","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/AdminCousesPage.js",["206","207"],[],"import Footer from 'components/Footer/footer';\nimport Navbar from 'components/Header/navbar';\nimport axios from 'axios';\nimport CreateCourseForm from 'components/forms/CreateCourseForm';\nimport DeleteCourseForm from 'components/forms/deleteCourseForm';\nimport React from 'react';\nimport Cookies from 'js-cookie';\nimport jwtDecode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function AdminCoursesPage() {\n\n  const navigate = useNavigate();\n  const token = Cookies.get(\"token\");\n  const payload = jwtDecode(token);\n  const role = payload.role;\n  if (role !== \"ADMIN\") {\n    navigate(\"/signin\", {replace: true});\n  }\n\n  const [allCourses, setAllCourses] = React.useState([]);\n\n  React.useEffect(() => {\n    async function getAllCourses() {\n      try {\n        const response = await axios.get('/api/courses');\n\n        if (response.status === 200) {\n          setAllCourses(response.data);\n        }\n      } catch (error) {\n        // Handle the error as needed\n        console.error('Error fetching courses:', error);\n      }\n  }\n\n    getAllCourses();\n  }, []);\n\n  function handleCourseNameClick(name) {\n    navigate(`/courses/${name}`);\n  }\n\n  function handleChange(course) {\n    setAllCourses([course, ...allCourses]);\n  }\n\n  return (\n    <div>\n        \n        <CreateCourseForm handleChange={handleChange}/>\n        <table>\n            <thead>\n                <tr>\n                    <th>S.No</th>\n                    <th>Course Name</th>\n                    <th>Course Description</th>\n                    <th>Actions</th>\n                </tr>  \n            </thead>\n            <tbody>\n                {allCourses.map((row, index) => {\n                  return(<tr key={row._id}>\n                          {/* table rows */}\n                        <td>{index+1}</td>\n                        <td onClick={()=>handleCourseNameClick(row.name)}>{row.name}</td>\n                        <td>{row.description}</td>\n                        <td>\n                            <DeleteCourseForm _id={row._id} setData={setAllCourses} data={allCourses} />\n                        </td>\n                        </tr>\n                      );\n                      })}\n            </tbody>\n        </table>\n        \n        \n    </div>\n  );\n}\n","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/pages/StudentCoursesPage.js",["208","209","210"],[],"import React from 'react';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport Navbar from 'components/Header/navbar';\nimport Footer from 'components/Footer/footer';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function StudentCoursesPage() {\n\n    const navigate = useNavigate();\n\n    function checkSignedIn() {\n        try {\n            const token = Cookies.get(\"token\");\n            const payload = jwtDecode(token);\n            const role = payload.role;\n            if (role === \"STUDENT\") {\n                return role;\n            } else {\n                navigate(\"/signin\", {replace: true});\n            }\n        } catch (error) {\n            navigate(\"/signin\", {replace: true});\n        }\n    }\n    \n    const [allCourses, setAllCourses] = React.useState([]);\n    const role = checkSignedIn();\n\n    React.useEffect(() => {\n        async function getAllCourses() {\n          try {\n            const response = await axios.get('/api/courses');\n    \n            if (response.status === 200) {\n              setAllCourses(response.data);\n            }\n          } catch (error) {\n            // Handle the error as needed\n            console.error('Error fetching courses:', error);\n          }\n      }\n    \n        getAllCourses();\n      }, []);\n      \n    function handleCourseNameClick(name) {\n        navigate(`/courses/${name}`, {replace: true});\n    }\n\n    return (\n        <div>\n            \n            <table>\n                <thead>\n                    <tr>\n                        <th>S.No</th>\n                        <th>Course Name</th>\n                        <th>Course Description</th>\n                    </tr>  \n                </thead>\n                <tbody>\n                    {allCourses.map((row, index) => {\n                      return(<tr key={row._id}>\n                              {/* table rows */}\n                            <td>{index+1}</td>\n                            <td onClick={()=>handleCourseNameClick(row.name)}>{row.name}</td>\n                            <td>{row.description}</td>\n                            </tr>\n                          );\n                          })}\n                </tbody>\n            </table>\n            \n        </div>\n      );\n}\n","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/Dashboard/ClientDashboard.js",["211","212","213"],[],"import React from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport PublishProjectForm from \"components/forms/PublishProjectForm\";\nimport ProjectPreview from \"../project/ProjectPreview\";\nimport Navbar from \"components/Header/navbar\";\n\nexport default function ClientDashBoard() {\n  const navigate = useNavigate();\n  const [projects, setProjects] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [projectId, setProjectId] = React.useState(\"\");\n\n  React.useEffect(async () => {\n    const response = await axios.get(\"/api/project\");\n    switch (response.status) {\n      case 401:\n        console.log(\"student cannot access\");\n        navigate(\"/sigin\", { replace: true });\n        break;\n      case 200:\n        setProjects(response.data);\n        break;\n      case 500:\n        console.log(\"internal server error\");\n        break;\n    }\n  }, []);\n\n  const onClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <PublishProjectForm />\n      {open && (\n        <ProjectPreview onClose={onClose} projectId={projectId} />\n      )}\n      <table>\n        <thead>\n          <tr>\n            <th>S.No</th>\n            <th>Project Name</th>\n            <th>Created On</th>\n          </tr>\n        </thead>\n        <tbody>\n          {projects.map((row, index) => {\n            return (\n              <tr key={row._id}>\n                <td>{index + 1}</td>\n                <td onClick={() => setProjectId(row._id)}>{row.name}</td>\n                <td>{row.createdOn}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/Dashboard/AdminDashboard.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forgot-my-password/formResetPassword.js",["214"],[],"import React, { useState } from 'react';\nimport camsBlue from '../../assets/camsBlue.png';\nimport '../../styles/formResetPasswordStyles.css';\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\n\nconst FormResetPassword = ({changeContent}) => {\n\n    const navigate = useNavigate();\n    const [isFocused, setIsFocused] = useState(false);\n    const [hasValue, setHasValue] = useState(false);\n    const [email, setEmail] = useState(\"\");\n\n    const handleFocus = () => {\n        setIsFocused(true);\n    };\n\n    const handleBlur = (e) => {\n        setIsFocused(false);\n        setHasValue(e.target.value !== '');\n    };\n\n    const handleBack = (event) => {\n        event.preventDefault();\n        navigate(\"/signin\", {replace: true});\n    }\n\n    const handleContinue = async(event) => {\n        event.preventDefault();\n        if (email) {\n            try {\n                const response = await axios.post('/api/forgot-password', \n            {email:email}, {headers:{'Content-Type': 'application/json'}});\n            switch (response.status) {\n                case 200:\n                    console.log(\"succesful\");\n                    changeContent(2);\n                    break;\n                case 404:\n                    console.log(\"Your email is not signed up\");\n                    break;\n                case 400:\n                    console.log(\"Email is missing\");\n                    break;\n                case 500:\n                    console.log(\"Email address doesnt exist\");\n                    break;\n                }\n            } catch (err) {\n                console.log(err);\n            }  \n        } else {\n            console.log(\"Email cannot be empty\");\n        }\n    }\n\n  return (\n    <div className='reset-pwd'>\n        <div className='reset-pwd-container'>\n            <form className='reset-pwd-actualForm'>\n                        <div className='reset-pwd-Logo-Help'>\n                            \n                                {/* logo goes here */}\n                                <div className='reset-pwd-logo'>\n                                    <div class=\"reset-pwd-camsBlue\"> <img src={camsBlue} alt=\"CAMS Logo\" />  </div>\n                                </div>\n\n                                {/* Help icon goes here */}\n                                <div className='reset-pwd-help'>\n                                    <div className='reset-pwd-question'> \n                                        <svg className='qSvg' xmlns=\"http://www.w3.org/2000/svg\" width=\"27\" height=\"27\" viewBox=\"0 0 29 29\">\n                                            <path id=\"ic_help_outline_24px\" d=\"M15.05,25.2h2.9V22.3h-2.9ZM16.5,2A14.5,14.5,0,1,0,31,16.5,14.505,14.505,0,0,0,16.5,2Zm0,26.1A11.6,11.6,0,1,1,28.1,16.5,11.615,11.615,0,0,1,16.5,28.1Zm0-20.3a5.8,5.8,0,0,0-5.8,5.8h2.9a2.9,2.9,0,1,1,5.8,0c0,2.9-4.35,2.538-4.35,7.25h2.9c0-3.263,4.35-3.625,4.35-7.25A5.8,5.8,0,0,0,16.5,7.8Z\" transform=\"translate(-2 -2)\" fill=\"#fff\"/>\n                                        </svg>\n                                    </div>\n                                </div>\n\n                        </div>\n\n                        <div className='reset-password'> \n                                <span class='reset-password-text-01'>Reset Password</span>\n                                <p1   class='reset-password-text-02'>\n                                    Enter the email associated with your account and\n                                    we’ll send an email with instructions to reset your password.\n                                </p1>\n                        </div>\n\n      \n                <div className='reset-pwd-input-fields'>\n                        <div className='reset-pwd-email'>\n\n                                <label htmlFor=\"email\" className={`reset-pwd-label ${isFocused || hasValue ? 'focused' : ''}`}>\n                                    Email Address\n                                </label>\n\n                                <input\n                                    type=\"email\"\n                                    id=\"email\"\n                                    className={`reset-pwd-input ${isFocused || hasValue ? 'focused' : ''}`}\n                                    onFocus={handleFocus}\n                                    onBlur={handleBlur}\n                                    value={email}\n                                    onChange={(event)=>{setEmail(event.target.value)}}\n                                />\n                        </div>\n\n                </div>\n\n                <div className='reset-pwd-form-buttons'>\n                        <button className='reset-pwd-button-01' onClick={handleContinue}>Send Instructions</button>\n                        <button className='reset-pwd-button-02' onClick={handleBack}>Back to Sign in</button>  \n                </div>                        \n                \n            </form>\n        </div>\n\n        <div className='plain-footer'>\n\n        </div>\n    </div>\n  )\n}\n\nexport default FormResetPassword","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forgot-my-password/noteCheckYourEmail.js",["215"],[],"import React from 'react';\nimport camsBlue from '../../assets/camsBlue.png';\nimport '../../styles/noteCheckStyles.css'\nimport { useNavigate } from 'react-router-dom';\n\nconst NoteCheckYourEmail = ({changeContent}) => {\n\n  const navigate = useNavigate();\n\n  const handleBackToSignin = (event) => {\n    navigate(\"/signin\", {replace:true});\n    changeContent(1);\n  }\n\n  const tryAnotherEmail = (event) => {\n    changeContent(1);\n  }\n\n\n  return (\n    <div className='noteCheckYourEmail'>\n        <div className='noteCheckYourEmail-container'>\n            <form className='noteCheckYourEmail-actualForm'>\n                        <div className='noteCheckYourEmail-Logo-Help'>\n                            \n                                {/* logo goes here */}\n                                <div className='noteCheckYourEmail-logo'>\n                                    <div class=\"noteCheckYourEmail-camsBlue\"> <img src={camsBlue} alt=\"CAMS Logo\" />  </div>\n                                </div>\n\n                                {/* Help icon goes here */}\n                                <div className='noteCheckYourEmail-help'>\n                                    <div className='noteCheckYourEmail-question'> \n                                        <svg className='qSvg' xmlns=\"http://www.w3.org/2000/svg\" width=\"27\" height=\"27\" viewBox=\"0 0 29 29\">\n                                            <path id=\"ic_help_outline_24px\" d=\"M15.05,25.2h2.9V22.3h-2.9ZM16.5,2A14.5,14.5,0,1,0,31,16.5,14.505,14.505,0,0,0,16.5,2Zm0,26.1A11.6,11.6,0,1,1,28.1,16.5,11.615,11.615,0,0,1,16.5,28.1Zm0-20.3a5.8,5.8,0,0,0-5.8,5.8h2.9a2.9,2.9,0,1,1,5.8,0c0,2.9-4.35,2.538-4.35,7.25h2.9c0-3.263,4.35-3.625,4.35-7.25A5.8,5.8,0,0,0,16.5,7.8Z\" transform=\"translate(-2 -2)\" fill=\"#fff\"/>\n                                        </svg>\n                                    </div>\n                                </div>\n\n                        </div>\n\n                        <div className='check-your-email'> \n\n                                <span class='check-your-email-text-01'>Check Your Email</span>\n\n                                <p1   class='check-your-email-text-02'>\n                                    We have sent a password recover\n                                    Instructions to your email.\n                                </p1>\n\n                                <p1   class='check-your-email-text-03'>\n                                    Did not receive email? Check your spam filter,\n                                </p1>\n\n                                <p1   class='check-your-email-text-04' onClick={tryAnotherEmail}>\n                                    or<a className='try-another'> try another email address</a>\n                                </p1>\n                        </div>\n\n    \n\n                <div className='noteCheckYourEmail-form-buttons'>\n                        <button className='noteCheckYourEmail-button-02' onClick={handleBackToSignin}>Back to Sign in</button>  \n                </div>                        \n                \n            </form>\n        </div>\n\n        <div className='plain-footer'>\n\n        </div>\n    </div>\n  )\n}\n\nexport default NoteCheckYourEmail","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/project/PendingProjects.js",["216"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport ConfirmationPopup from 'components/forms/ConfimationPopup';\nimport PdfPreview from './PdfPreview';\n\nfunction PendingProjects() {\n\n  const [projects, setProjects] = useState([]);\n  const navigate = useNavigate();\n  const [popup, setPopup] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(\"\");\n  const [preview ,setPreview] = useState(false);\n\n  // api call to get the table\n  React.useEffect(() => {\n    async function fetchTableData() {\n      try {\n        const response = await axios.get('/api/projects', {\n          params: {\n            pending: true\n          }\n        });\n        setProjects(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n      \n    fetchTableData();\n    }, []);\n  \n  const handleClick= (id) => {\n      setPopup(true);\n      setSelectedProject(id);\n  }\n\n  const handleClose = () => {\n    setPreview(false);\n  }\n\n  const handleYes = async() => {\n    try {\n      console.log(selectedProject)\n      const response = await axios.delete('/api/project/'+ selectedProject);\n      \n      switch (response.status) {\n        case (200):\n          console.log(\"Deleted successfully\");\n          setPopup(false);\n          setProjects(projects.filter(p => p._id !== selectedProject));\n          setSelectedProject(\"\");\n          break;\n        case (401):\n          console.log(\"Unauthorized to delete\");\n          navigate(\"/signin\" , {replace: true});\n          break;\n\n        case(404):\n          console.log(\"Cannot find the project\");\n          break;\n        \n        case(500):\n          console.log(\"server error\");\n          break;\n      }\n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const handleNo = (event) => {\n    setPopup(false);\n  }\n\n  return (\n    <>\n    {popup && <ConfirmationPopup message=\"Are you sure you want to delete this item ?\"  onNo={handleNo} onYes={handleYes}/>}\n    {preview && <PdfPreview projectId={selectedProject}  onClose={handleClose} />}\n    <table>\n      {/* table headers */}\n      <thead>\n        <tr>\n          <th>S.No</th>\n          <th>Project Name</th>\n          <th>Skills</th>\n          <th>Created On</th>\n          <th>Created By</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {projects.map((row, index) => {\n          return(<tr key={row._id}>\n            {/* table rows */}\n            <td>{index}</td>\n            <td onClick={() => {setSelectedProject(row._id); setPreview(true);}}>{row.name}</td>\n            <td>{row.skills}</td>\n            <td>{row.createdAt}</td>\n            <td>{row.createdBy}</td>\n            <td>\n              <button onClick={() => handleClick(row._id)}>Delete</button>\n            </td>\n          </tr>\n          );\n        })}\n      </tbody>\n    </table>\n    </>\n  );\n}\n\nexport default PendingProjects;\n","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/project/ActiveProjects.js",["217"],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/project/PublishProjects.js",["218"],[],"import React from 'react';\nimport SendInviteLinkForm from 'components/forms/SendInviteLinkForm';\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport ConfirmationPopup from 'components/forms/ConfimationPopup';\n\nfunction PublishProjects() {\n\n  const navigate = useNavigate();\n  const [popup, setPopup] = React.useState(false);\n  const [clients, setClients] = React.useState([]);\n  const [selectedClient , setSelectedClient] = React.useState(\"\");\n  \n  const handleChange = (client) => {\n    setClients([client, ...clients]);\n  }\n\n  React.useEffect(() => {\n    async function fetchTableData() {\n      try {\n        const response = await axios.get('/api/users?role=CLIENT');\n        setClients(response.data);\n        console.log(response.data);\n        console.log(clients);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n      \n    fetchTableData();\n  }, []);\n\n\n  const handleYes = async() => {\n    try {\n      const response = await axios.delete('/api/user/'+ selectedClient);\n      switch (response.status) {\n        case (200):\n          console.log(\"Deleted successfully\");\n          setPopup(false);\n          setClients(clients.filter(p => p.email !== selectedClient));\n          setSelectedClient(\"\");\n          break;\n        case (401):\n          console.log(\"Unauthorized to delete\");\n          navigate(\"/signin\" , {replace: true});\n          break;\n\n        case(404):\n          console.log(\"Cannot find the client\");\n          break;\n\n        case(409):\n          console.log(\"Cannot delete self\");\n          break;\n        \n        default:\n          console.log(\"server error\");\n          break;\n      }\n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const handleNo = (event) => {\n    setPopup(false);\n  }\n\n  return (\n    <div>\n      <SendInviteLinkForm handleChange={handleChange} />\n      {popup && <ConfirmationPopup message=\"Are you sure you want to delete this item ?\"  onNo={handleNo} onYes={handleYes}/>}\n      <table>\n      {/* table headers */}\n      <thead>\n        <tr>\n          <th>S.No</th>\n          <th>Client Name</th>\n          <th>Client email</th>\n          <th>Created On</th>\n          <th>Role</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {clients.map((row, index) => {\n          return(<tr key={row._id}>\n            {/* table rows */}\n            <td>{index}</td>\n            <td>{row.name}</td>\n            <td>{row.email}</td>\n            <td>{row.createdAt}</td>\n            <td>{row.role}</td>\n            <td>\n              <button onClick={() => {setSelectedClient(row.email); setPopup(true);}}>Remove</button>\n            </td>\n          </tr>\n          );\n        })}\n      </tbody>\n    </table>\n    </div>\n  );\n}\n\nexport default PublishProjects;\n","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/courses/CoursesAssignment.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/courses/CoursesProjects.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/courses/CoursesStudents.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/Footer/footer.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/Header/navbar.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/project/ProjectPreview.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/deleteCourseForm.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/SendInviteLinkForm.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/PublishProjectForm.js",["219","220"],[],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/PublishProjectForm.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst PublishProjectForm = ({data, setData}) => {\n  const navigate = useNavigate();\n  const [popup, setPopup] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [projectTitle, setProjectTitle] = useState(\"\");\n  const [projectDeadline, setProjectDeadline] = useState(\"\");\n  const [projectAdmins, setProjectAdmins] = useState(\"\");\n  const [projectDescription, setProjectDescription] = useState(\"\");\n  const [projectSkills, setProjectSkills] = useState(\"\");\n  const [projectResources, setProjectResources] = useState(\"\");\n  const [projectAttachments, setProjectAttachments] = useState();\n  const [selectedFileName, setSelectedFileName] = useState('');\n\n\n    const [subjectIDFocused, setSubjectIDFocused] = useState(false);\n    const [subjectIDHasValue, setSubjectIDHasValue] = useState(false);\n\n    const [studentIDFocused, setStudentIDFocused] = useState(false);\n    const [studentIDHasValue, setstudentIDHasValue] = useState(false);\n\n    const [passwordFocused, setPasswordFocused] = useState(false);\n    const [passwordHasValue, setPasswordHasValue] = useState(false);\n\n    const [resourcesFocused, setResourcesFocused] = useState(false);\n    const [resourcesHasValue, setResourcesHasValue] = useState(false);\n\n    const [isFocused, setIsFocused] = useState(false);\n    const [hasValue, setHasValue] = useState(false);\n\n    const [selectedDate, setSelectedDate] = useState('');\n\n    function handleDateChange(event) {\n        setSelectedDate(event.target.value);\n    }\n\n    const chooseFile = () => {\n      document.getElementById('projectAttachments').click();\n    }\n\n    const handleFocus = () => {\n        setIsFocused(true);\n    };\n\n    const handleBlur = (e) => {\n        setIsFocused(false);\n        setHasValue(e.target.value !== '');\n    };\n\n  const handleProjectTitleChange = (event) => {\n    setProjectTitle(event.target.value);\n  };\n\n  const handleProjectDeadlineChange = (event) => {\n    setProjectDeadline(event.target.value);\n  };\n\n  const handleProjectAdminsChange = (event) => {\n    setProjectAdmins(event.target.value);\n  };\n\n  const handleProjectDescriptionChange = (event) => {\n    setProjectDescription(event.target.value);\n  };\n\n  const handleProjectSkillsChange = (event) => {\n    setProjectSkills(event.target.value);\n  };\n\n  const handleProjectResourcesChange = (event) => {\n    setProjectResources(event.target.value);\n  };\n\n  const handleProjectAttachmentsChange = (event) => {\n    const file = event.target.files[0];\n  if (file) {\n    setSelectedFileName(file.name);\n  } else {\n    setSelectedFileName('');\n  }\n    setProjectAttachments(event.target.files[0]);\n  };\n\n  const handleNextPage = (event) => {\n    event.preventDefault();\n    setCurrentPage(currentPage + 1);\n  };\n\n  const handlePrevPage = (event) => {\n    event.preventDefault();\n    setCurrentPage(currentPage - 1);\n  };\n\n  const sendToApi = async() => {\n    if (\n      projectTitle &&\n      projectDeadline &&\n      projectAdmins &&\n      projectDescription &&\n      projectSkills &&\n      projectResources &&\n      projectAttachments\n    ) {\n      const formData = new FormData();\n      formData.set('name', projectTitle);\n      formData.set('administrators', projectAdmins);\n      formData.set('description', projectDescription);\n      formData.set('skills', projectSkills);\n      formData.set('resources', projectResources);\n      formData.set('deadline', projectDeadline);\n      if (projectAttachments !== null) { // check if projectAttachments is not null\n        formData.append('file', projectAttachments);\n      } else {\n        console.log(\"file is null\");\n      }\n      \n      try {\n        const response = await axios.post('/api/project', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n        \n        if (response.status === 201) {\n          setData([response.data, ...data]);\n          setCurrentPage(currentPage + 1);\n        }\n        \n      } catch (error) {\n        switch (error.response.status) {\n          case 401:\n            navigate(\"/signin\", { replace: true });\n            break;\n          case 400:\n            console.log(\"missing fields\");\n            break;\n          case 500:\n            console.log(\"internal error\");\n            break;\n          default:\n            console.log(\"unexpected error\");\n        }\n        console.log(error);\n      }\n    }\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    await sendToApi();\n  };\n\n  const handleClose = (event) => {\n    setPopup(false);\n  };\n\n  const pageOne = () => {\n    return (\n      <div className=\"project-form-p1-container\">\n\n                        <div className='project-form-p1-progress'>\n                                    <div className='project-form-p1-progress-one'> \n                                        <svg className='project-form-p2-progress-one-svg' xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                          <g id=\"one\" transform=\"translate(-687 -275)\">\n                                            <circle id=\"Ellipse_2\" data-name=\"Ellipse 2\" cx=\"12\" cy=\"12\" r=\"12\" transform=\"translate(687 275)\" fill=\"#0097eb\"/>\n                                            <text id=\"_1\" data-name=\"1\" transform=\"translate(697 292)\" fill=\"#fff\" font-size=\"14\" font-family=\"Poppins-Regular, Poppins\"><tspan x=\"0\" y=\"0\">1</tspan></text>\n                                          </g>\n                                        </svg>\n                                    </div>\n\n                                    <div className='project-form-p1-progress-first-line'> \n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"227.835\" height=\"2\" viewBox=\"0 0 227.835 2\">\n                                          <path id=\"first-grey-line\" d=\"M-4537.775,3601h225.835\" transform=\"translate(4538.775 -3600)\" fill=\"none\" stroke=\"#9f9f9f\" stroke-linecap=\"round\" stroke-width=\"2\"/>\n                                        </svg>\n                                    </div>\n\n                                    <div className='project-form-p1-progress-two'> \n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                          <g id=\"two-grey-bg\" transform=\"translate(-948 -275)\">\n                                            <circle id=\"Ellipse_3\" data-name=\"Ellipse 3\" cx=\"12\" cy=\"12\" r=\"12\" transform=\"translate(948 275)\" fill=\"#9f9f9f\"/>\n                                            <text id=\"_2\" data-name=\"2\" transform=\"translate(956 292)\" fill=\"#fff\" font-size=\"14\" font-family=\"Poppins-Regular, Poppins\"><tspan x=\"0\" y=\"0\">2</tspan></text>\n                                          </g>\n                                        </svg>\n                                    </div>\n\n                                    <div className='project-form-p1-progress-second-line'> \n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"227.835\" height=\"2\" viewBox=\"0 0 227.835 2\">\n                                          <path id=\"second-grey-line\" d=\"M-4537.775,3601h225.835\" transform=\"translate(4538.775 -3600)\" fill=\"none\" stroke=\"#9f9f9f\" stroke-linecap=\"round\" stroke-width=\"2\"/>\n                                        </svg>\n                                    </div>\n\n                                    <div className='project-form-p1-progress-three'> \n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                          <g id=\"three-grey-bg\" transform=\"translate(-1209 -275)\">\n                                            <circle id=\"Ellipse_4\" data-name=\"Ellipse 4\" cx=\"12\" cy=\"12\" r=\"12\" transform=\"translate(1209 275)\" fill=\"#9f9f9f\"/>\n                                            <text id=\"_3\" data-name=\"3\" transform=\"translate(1217 292)\" fill=\"#fff\" font-size=\"14\" font-family=\"Poppins-Regular, Poppins\"><tspan x=\"0\" y=\"0\">3</tspan></text>\n                                          </g>\n                                        </svg>\n                                    </div>\n                        </div>\n\n                        <div className='project-form-p1-progress-title'> \n                                    <span   class='project-form-p2-progress-title-text'>General Information</span>\n                        </div>\n\n\n\n        <form className=\"project-form-page01\" onSubmit={handleNextPage}>\n\n\n\n          <div className='project-form-page01-fullName-ID'> \n\n            <label htmlFor=\"projectTitle\" className={`project-form-page01-fullName-ID-label ${subjectIDFocused  || subjectIDHasValue ? 'focused' : ''}`}>Project Title</label>\n            <input\n              className=\"project-form-page01-fullName-ID-input\"\n              type=\"text\"\n              id=\"projectTitle\"\n              name=\"projectTitle\"\n              value={projectTitle}\n              onChange={handleProjectTitleChange}\n              required\n              onFocus={() => setSubjectIDFocused(true)}\n              onBlur={(e) => {\n                                setSubjectIDFocused(false);\n                                setSubjectIDHasValue(e.target.value !== '');\n                              }}\n            />\n          </div>\n\n\n          <div className='formProject-p1-date'> \n\n            <label htmlFor=\"projectDeadline\" className={`formProject-p1-date-label ${isFocused || hasValue ? 'focused' : ''}`}>Expected Project Deadline</label>\n            <input\n              type=\"date\"\n              id=\"projectDeadline\"\n              name=\"projectDeadline\"\n              value={projectDeadline}\n              onChange={handleProjectDeadlineChange}\n              required\n              className={`formProject-p1-date-input ${isFocused || hasValue ? 'focused' : ''}`}\n              onFocus={handleFocus}\n              onBlur={handleBlur}\n            />\n\n          </div>\n\n          <div className='formProject01-Admins'>      \n\n              <label htmlFor=\"projectAdmins\" className={`formProject01-Admins-label ${studentIDFocused  || studentIDHasValue ? 'focused' : ''}`}>Project Administrators</label>\n              \n              <input\n                type=\"text\"\n                id=\"projectAdmins\"\n                name=\"projectAdmins\"\n                value={projectAdmins}\n                onChange={handleProjectAdminsChange}\n                required\n                className=\"formProject01-Admins-input\"\n                onFocus={() => setStudentIDFocused(true)}\n                onBlur={(e) => {\n                    setStudentIDFocused(false);\n                    setstudentIDHasValue(e.target.value !== '');\n                }}\n              />\n          </div>\n\n            <div className='formProject01-message'>\n\n                  <label htmlFor=\"projectDescription\" className={`formProject01-message-label ${passwordFocused  || passwordHasValue ? 'focused' : ''}`}>Project Description</label>\n                  <textarea\n                    id=\"projectDescription\"\n                    name=\"projectDescription\"\n                    value={projectDescription}\n                    onChange={handleProjectDescriptionChange}\n                    required\n                    className=\"formProject01-message-input\"\n                      onFocus={() => setPasswordFocused(true)}\n                      onBlur={(e) => {\n                                          setPasswordFocused(false);\n                                          setPasswordHasValue(e.target.value !== '');\n                                      }}\n                  />\n\n            </div>\n\n            <div className=\"project-form-p1-buttons\">\n              <button className=\"project-form-p1-continue\" type=\"submit\">Continue</button>\n            </div>\n          </form>\n      </div>\n    )\n  }\n\n  const pageTwo = () => {\n    return (\n      <div className=\"project-form-p2-container\">\n\n                        <div className='project-form-p2-progress'>\n\n                                    <div className='project-form-p2-progress-one'> \n                                        <svg className='project-form-p2-progress-one-svg' xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                          <g id=\"one\" transform=\"translate(-687 -275)\">\n                                            <circle id=\"Ellipse_2\" data-name=\"Ellipse 2\" cx=\"12\" cy=\"12\" r=\"12\" transform=\"translate(687 275)\" fill=\"#0097eb\"/>\n                                            <text id=\"_1\" data-name=\"1\" transform=\"translate(697 292)\" fill=\"#fff\" font-size=\"14\" font-family=\"Poppins-Regular, Poppins\"><tspan x=\"0\" y=\"0\">1</tspan></text>\n                                          </g>\n                                        </svg>\n                                    </div>\n\n                                    <div className='project-form-p2-progress-first-line'> \n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"227.835\" height=\"2\" viewBox=\"0 0 227.835 2\">\n                                          <path id=\"one-two-line\" d=\"M-4537.775,3601h225.835\" transform=\"translate(4538.775 -3600)\" fill=\"none\" stroke=\"#0097eb\" stroke-linecap=\"round\" stroke-width=\"2\"/>\n                                        </svg>\n                                    </div>\n\n                                    <div className='project-form-p2-progress-two'> \n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                          <g id=\"two\" transform=\"translate(-948 -275)\">\n                                            <circle id=\"Ellipse_3\" data-name=\"Ellipse 3\" cx=\"12\" cy=\"12\" r=\"12\" transform=\"translate(948 275)\" fill=\"#0097eb\"/>\n                                            <text id=\"_2\" data-name=\"2\" transform=\"translate(956 292)\" fill=\"#fff\" font-size=\"14\" font-family=\"Poppins-Regular, Poppins\"><tspan x=\"0\" y=\"0\">2</tspan></text>\n                                          </g>\n                                        </svg>\n                                    </div>\n\n                                    <div className='project-form-p2-progress-second-line'> \n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"227.835\" height=\"2\" viewBox=\"0 0 227.835 2\">\n                                          <path id=\"second-grey-line\" d=\"M-4537.775,3601h225.835\" transform=\"translate(4538.775 -3600)\" fill=\"none\" stroke=\"#9f9f9f\" stroke-linecap=\"round\" stroke-width=\"2\"/>\n                                        </svg>\n                                    </div>\n\n                                    <div className='project-form-p2-progress-three'> \n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                          <g id=\"three-grey-bg\" transform=\"translate(-1209 -275)\">\n                                            <circle id=\"Ellipse_4\" data-name=\"Ellipse 4\" cx=\"12\" cy=\"12\" r=\"12\" transform=\"translate(1209 275)\" fill=\"#9f9f9f\"/>\n                                            <text id=\"_3\" data-name=\"3\" transform=\"translate(1217 292)\" fill=\"#fff\" font-size=\"14\" font-family=\"Poppins-Regular, Poppins\"><tspan x=\"0\" y=\"0\">3</tspan></text>\n                                          </g>\n                                        </svg>\n                                    </div>\n                        </div>\n\n                        <div className='project-form-p2-progress-title'> \n                                    <span   class='project-form-p2-progress-title-text'>Skills, Technologies & Resources</span>\n                        </div>\n\n                        <form className=\"project-form-page02\" onSubmit={handleNextPage}>\n\n                                <div className=\"formProject02-skills\"> \n\n                                    <label htmlFor=\"projectSkills\" className={`formProject02-skills-label ${passwordFocused  || passwordHasValue ? 'focused' : ''}`}>Skills & Technologies Required</label>\n                                    <textarea\n                                      id=\"projectSkills\"\n                                      name=\"projectSkills\"\n                                      value={projectSkills}\n                                      onChange={handleProjectSkillsChange}\n                                      required\n                                      className=\"formProject02-skills-input\"\n                                          onFocus={() => setPasswordFocused(true)}\n                                          onBlur={(e) => {\n                                                              setPasswordFocused(false);\n                                                              setPasswordHasValue(e.target.value !== '');\n                                                          }}\n                                    />\n\n                                </div>\n\n\n                                <div className=\"formProject02-resources\"> \n                                \n                                      <label htmlFor=\"projectResources\" className={`formProject02-resources-label ${resourcesFocused  || resourcesHasValue ? 'focused' : ''}`}>Resources Required</label>\n                                      <textarea\n                                        id=\"projectResources\"\n                                        name=\"projectResources\"\n                                        value={projectResources}\n                                        onChange={handleProjectResourcesChange}\n                                        required\n                                        className=\"formProject02-resources-input\"\n                                          onFocus={() => setResourcesFocused(true)}\n                                          onBlur={(e) => {\n                                                              setResourcesFocused(false);\n                                                              setResourcesHasValue(e.target.value !== '');\n                                                          }}\n                                      />\n\n                                </div>\n\n                            \n                                <div className=\"project-form-p2-buttons\">\n\n                                    <div className=\"formProject02-previous\"> \n                                      <button className=\"project-form-p2-previous\" onClick={handlePrevPage}>Previous</button>\n                                    </div>\n\n                                    <div className=\"formProject02-continue\"> \n                                    <button className=\"project-form-p2-continue\" type=\"submit\">Continue</button>\n                                    </div> \n                                    \n                                </div>\n\n                \n                        </form>\n          </div>\n    )\n  }\n\n  const pageThree = () => {\n    return (\n      <div className=\"project-form-p3-container\">\n        <form onSubmit={handleSubmit}>\n            \n                               <div className='project-form-p2-progress'>\n\n                                                      <div className='project-form-p3-progress-one'> \n                                                          <svg className='project-form-p3-progress-one-svg' xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                                            <g id=\"one\" transform=\"translate(-687 -275)\">\n                                                              <circle id=\"Ellipse_2\" data-name=\"Ellipse 2\" cx=\"12\" cy=\"12\" r=\"12\" transform=\"translate(687 275)\" fill=\"#0097eb\"/>\n                                                              <text id=\"_1\" data-name=\"1\" transform=\"translate(697 292)\" fill=\"#fff\" font-size=\"14\" font-family=\"Poppins-Regular, Poppins\"><tspan x=\"0\" y=\"0\">1</tspan></text>\n                                                            </g>\n                                                          </svg>\n                                                      </div>\n\n                                                      <div className='project-form-p3-progress-first-line'> \n                                                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"227.835\" height=\"2\" viewBox=\"0 0 227.835 2\">\n                                                            <path id=\"one-two-line\" d=\"M-4537.775,3601h225.835\" transform=\"translate(4538.775 -3600)\" fill=\"none\" stroke=\"#0097eb\" stroke-linecap=\"round\" stroke-width=\"2\"/>\n                                                          </svg>\n                                                      </div>\n\n                                                      <div className='project-form-p3-progress-two'> \n                                                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                                            <g id=\"two\" transform=\"translate(-948 -275)\">\n                                                              <circle id=\"Ellipse_3\" data-name=\"Ellipse 3\" cx=\"12\" cy=\"12\" r=\"12\" transform=\"translate(948 275)\" fill=\"#0097eb\"/>\n                                                              <text id=\"_2\" data-name=\"2\" transform=\"translate(956 292)\" fill=\"#fff\" font-size=\"14\" font-family=\"Poppins-Regular, Poppins\"><tspan x=\"0\" y=\"0\">2</tspan></text>\n                                                            </g>\n                                                          </svg>\n                                                      </div>\n\n                                                      <div className='project-form-p3-progress-second-line'> \n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"227.835\" height=\"2\" viewBox=\"0 0 227.835 2\">\n                                                          <path id=\"two-three-line\" d=\"M-4537.775,3601h225.835\" transform=\"translate(4538.775 -3600)\" fill=\"none\" stroke=\"#0097eb\" stroke-linecap=\"round\" stroke-width=\"2\"/>\n                                                        </svg>\n                                                      </div>\n\n                                                      <div className='project-form-p3-progress-three'> \n                                                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                                            <g id=\"three\" transform=\"translate(-1209 -275)\">\n                                                              <circle id=\"Ellipse_4\" data-name=\"Ellipse 4\" cx=\"12\" cy=\"12\" r=\"12\" transform=\"translate(1209 275)\" fill=\"#0097eb\"/>\n                                                              <text id=\"_3\" data-name=\"3\" transform=\"translate(1217 292)\" fill=\"#fff\" font-size=\"14\" font-family=\"Poppins-Regular, Poppins\"><tspan x=\"0\" y=\"0\">3</tspan></text>\n                                                            </g>\n                                                          </svg>\n                                                      </div>\n\n\n                               </div>\n\n                               <div className='project-form-p3-progress-title'> \n                                                        <span   class='project-form-p3-progress-title-text'>Additional Information</span>\n                              </div>\n\n            <div className=\"attachment-container\">\n\n                                <div className='uploadFile'>\n                                    <svg className='uploadSvg'   xmlns=\"http://www.w3.org/2000/svg\" width=\"155.48\" height=\"115.653\" viewBox=\"0 0 119.48 79.653\">\n                                      <path id=\"ic_cloud_upload_24px\" d=\"M96.331,34.069a37.3,37.3,0,0,0-69.7-9.957A29.858,29.858,0,0,0,29.87,83.653H94.588a24.82,24.82,0,0,0,1.742-49.584ZM69.7,48.8V68.718H49.783V48.8H34.848L59.74,23.913,84.632,48.8Z\" transform=\"translate(0 -4)\" fill=\"#2b6d95\" opacity=\"0.403\"/>\n                                    </svg>\n                                </div>\n\n                                <div className='uploadFile-instructions'>\n                                  \n                                    <span className='instructions-01'>Drag & drop files here</span>\n                                    <span className='instructions-02'>(Please upload a PDF file, less than 25 MB)</span>\n\n                                </div>\n\n                  \n                                <div className=\"file-input-wrapper\">\n                                  <input type=\"file\" id=\"projectAttachments\" name=\"file\" onChange={handleProjectAttachmentsChange} accept=\"application/pdf\" required />\n                                  <button className=\"custom-file-button\" onClick={chooseFile}>Choose File</button>\n                                  {selectedFileName && <span className=\"selected-file-name\">{selectedFileName}</span>}\n                                </div>\n\n\n\n                  </div>\n\n            <div className=\"form-buttons\">\n              \n              \n                  <div className=\"project-form-p3-buttons\">\n\n                                        <div className=\"formProject03-previous\"> \n                                          <button className=\"project-form-p3-previous\" onClick={handlePrevPage}>Previous</button>\n                                        </div>\n\n                                        <div className=\"formProject03-submit\"> \n                                           <button className=\"project-form-p3-submit\" type=\"submit\">Submit</button>\n                                        </div> \n                                        \n                  </div>\n            </div>\n          </form>\n      </div>\n    )\n  }\n\n  const confirmationPage = () => {\n    return (\n    <>\n      <div className=\"project-form-p4-container\">\n        <div className=\"project-attachment-container\">\n\n                                <div className='thumbsup'>\n                                  <svg className='upSvg' width=\"200px\" height=\"200px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M20.1818 9.36364H14.4455L15.3091 5.20909L15.3364 4.91818C15.3364 4.54545 15.1818 4.2 14.9364 3.95455L13.9727 3L7.99091 8.99091C7.65455 9.31818 7.45455 9.77273 7.45455 10.2727V19.3636C7.45455 20.3636 8.27273 21.1818 9.27273 21.1818H17.4545C18.2091 21.1818 18.8545 20.7273 19.1273 20.0727L21.8727 13.6636C21.9545 13.4545 22 13.2364 22 13V11.1818C22 10.1818 21.1818 9.36364 20.1818 9.36364Z\" fill=\"#000000\"/>\n                                    <path d=\"M5.63636 10.2727H2V21.1818H5.63636V10.2727Z\" fill=\"#000000\"/>\n                                  </svg>\n                                </div>\n\n            <div className=\"successfully\"> \n              <p>Project created successfully!</p>\n            </div>\n          \n          </div>\n\n        <div>\n          <button className=\"finish\" onClick={()=>{setPopup(false); setCurrentPage(1);}}>Finish</button>\n        </div>\n      </div>\n    </>\n    )\n  }\n\n  return (\n    <>\n      <button className=\"create-project\" onClick={() => setPopup(true)}>Create Project</button>\n      \n    \n        {popup &&\n          (<div className=\"form-popup-bg\">\n                <div className={`form-popup ${currentPage === 1 ? \"page1\" : currentPage === 2 ? \"page2\" : \"page3\"}`}>\n                  \n\n                    <div className='project-form-popup-header'>\n                            \n                            {/* Title goes here */}\n                    \n                              <div className='project-form-popup-title'> \n                                  <span class='project-form-popup-title-01'>Publish a Project</span>\n                              </div>\n              \n\n                            {/* Close icon goes here */}\n                            <div className='project-form-popup-close' onClick={handleClose}>\n                                <div className='project-form-popup-close-button'> \n                                  <svg className='cSvg' xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\">\n                                      <path id=\"ic_close_24px\" d=\"M19,6.41,17.59,5,12,10.59,6.41,5,5,6.41,10.59,12,5,17.59,6.41,19,12,13.41,17.59,19,19,17.59,13.41,12Z\" transform=\"translate(-5 -5)\"/>\n                                  </svg>\n                                </div>\n                            </div>\n\n                    </div>\n\n\n                  {currentPage === 1 && pageOne()}\n                  {currentPage === 2 && pageTwo()}\n                  {currentPage === 3 && pageThree()}\n                  {currentPage === 4 && confirmationPage()}\n                </div>\n          </div>\n          )}\n      \n    </>\n );\n};\n\nexport default PublishProjectForm;\n\n             \n",[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/ConfimationPopup.js",["221"],[],"import React, { useState } from 'react';\nimport \"../../styles/confirmationForm.css\"\n\nfunction ConfirmationPopup({ message, onYes, onNo }) {\n\n  return (\n    <div className=\"ConfirmationPopupContainer\">\n      <div className=\"ConfirmationPopup\">\n        <p>{message}</p>\n        <div className=\"ConfirmationButtons\">\n          <button onClick={onYes}>Yes</button>\n          <button onClick={onNo}>No</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ConfirmationPopup;","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/project/PdfPreview.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/InviteLinkStudent.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/SelectProjectsForCourse.js",["222"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/ProjectSelectionPopup.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport ErrorMessagePopup from \"./ErrorMessagePopup\";\n\nexport default function SelectProjectsForCourse({ projects , name, setData}) {\n\n\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(false);\n  const [selectedProjects, setSelectedProjects] = useState([]);\n  const [allProjects, setAllProjects] = useState([]);\n\n  useEffect(() => {\n    // set the initially selected projects\n    setSelectedProjects(projects.map((project) => project._id));\n    \n    async function getAllProjects() {\n        try {\n            const response = await axios.get(\"/api/projects\");\n            setAllProjects(response.data);\n        } catch (err) {\n            navigate('/signin', {replace: true});\n        }\n    }\n\n    getAllProjects();\n\n  }, [projects, navigate]);\n\n  const handleProjectSelection = (event) => {\n    const projectId = event.target.value;\n    if (event.target.checked) {\n      setSelectedProjects((prevState) => [...prevState, projectId]);\n    } else {\n      setSelectedProjects((prevState) =>\n        prevState.filter((id) => id !== projectId)\n      );\n    }\n  };\n\n  const handleSubmit = async() => {\n    try {\n        \n        console.log(selectedProjects);\n        const response = await axios.put(`/api/courses/${name}`, { projects: selectedProjects },\n        { headers: { 'Content-Type': 'application/json' } });\n        \n\n        if (response.status === 200) {\n            setData(response.data);\n            onClose();\n        }\n        \n\n    } catch (err) {\n        console.log(err);\n    }\n  };\n\n  const onClose = () => {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n\n    \n    <button onClick={()=>setOpen(true)}> Add Projects </button>\n    {open && \n      (<div className=\"popup-background\">\n      <div className=\"popup-content\">\n        <h2>Select Projects</h2>\n        <div className=\"project-list\">\n        {allProjects.map((project) => {\n            const isChecked = selectedProjects.includes(project._id);\n            return (<label key={project._id}>\n            <input\n                type=\"checkbox\"\n                value={project._id}\n                checked={isChecked}\n                onChange={handleProjectSelection}\n            />\n            {project.name}\n            </label>\n            )} ) }\n        </div>\n        <button onClick={handleSubmit}>Submit</button>\n        <button onClick={onClose}>Cancel</button>\n      </div>\n    </div>)}\n    </div>\n  );\n}\n","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/DeleteStudentForm.js",["223"],[],"import { useNavigate } from \"react-router-dom\";\nimport ConfirmationPopup from \"./ConfimationPopup\";\nimport ErrorMessagePopup from \"./ErrorMessagePopup\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nexport default function DeleteStudentForm({student, data, setData}) {\n\n    const [open, setOpen] = React.useState(false);\n    const navigate = useNavigate();\n\n    async function onYes() {\n        try {\n            console.log(data._id);\n            console.log(student._id);\n            const response = await axios.delete(\"/api/courses/student\", {\n                data: { courseId: data._id, studentId: student._id },\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            \n\n            const updateUsers = data.users.filter(user => user._id !== student._id);\n            const updatedData = { ...data, users: updateUsers };\n            setData(updatedData);\n        } catch (err) {\n            switch (err.response.status) {\n                case 401 :\n                    setOpen(false);\n                    navigate(\"/sigin\", {replace: true});\n                    break;\n                case 404: \n                    setOpen(false);\n                    <ErrorMessagePopup message={\"Student/ course not found\"} />\n                    break;\n                default:\n                    setOpen(false);\n                    <ErrorMessagePopup message={\"\"} />\n                    break;\n            }\n        }\n    }\n\n    function onNo() {\n        setOpen(false);\n    }\n\n    return (\n        <div>\n            <button onClick={()=>setOpen(true)}>Delete</button>\n            {open && <ConfirmationPopup  message={\"Are you sure you want to delete this student ?\"}  onYes={onYes} onNo={onNo} />}\n        </div>\n    )\n}","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/courses/stages/StageTwo.js",["224","225","226"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function StageTwo({data , setData}) {\n    const navigate = useNavigate();\n    const assignedProjects = data.assignedProject;\n    const students = data.users;\n\n    const [selectedStudent, setSelectedStudent] = React.useState(null);\n    const [preferences,setPreferences] = React.useState([]);\n\n    React.useEffect(()=>{\n        async function getPreferences() {\n            try {\n                const response = await axios.get(`/preference/${data.name}`);\n                console.log(response.data);\n                setPreferences(response.data);\n            } catch (err) {\n                console.log({err});\n            }\n        }\n        getPreferences();\n    },[data]);\n\n\n    const assignedProjectToStudent = (userId) => {\n        if (!Array.isArray(assignedProjects)) {\n            return '-';\n        }\n        const assignedProject = assignedProjects.find((ap) => ap.student.toString() === userId.toString());\n        return assignedProject ? assignedProject.project.name : '-';\n    };\n  \n    \n    const isPreferenceSet = (userId) => {\n        if (!Array.isArray(preferences)) {\n            return 'NO';\n        }\n        const studentPreferences = preferences.find(\n          (preference) => preference.student._id === userId\n        );\n        if (studentPreferences && studentPreferences.projectPreferences.length > 0) {\n          return 'Yes';\n        }\n        return 'No';\n    };\n\n    const isAssignButtonEnabled = (userId) => {\n        if (!Array.isArray(preferences)) {\n            return false;\n        }\n\n        const studentPreferences = preferences.find(\n          (preference) => preference.student._id === userId\n        );\n        if (studentPreferences && studentPreferences.projectPreferences.length > 0) {\n          return true;\n        }\n        return false;\n    };\n\n    const renderPopup = () => {\n        if (!preferences) {\n            return <div></div>\n        }\n        const selectedStudentPreferences = preferences.find((preference) => preference.student._id === selectedStudent)?.projectPreferences;\n        return (\n          <div className=\"popup\">\n            <div className=\"popup-content\">\n              <h3>Assign Project to {students.find((student) => student._id === selectedStudent)?.name}</h3>\n              {selectedStudentPreferences && selectedStudentPreferences.map((preference) => (\n                <div key={preference.project._id}>\n                  <p>{preference.project.name}</p>\n                  <p>Rank: {preference.rank}</p>\n                </div>\n              ))}\n              <div>\n                <select name=\"project\" id=\"project-select\">\n                  {data.projects.map((project) => (\n                    <option key={project._id} value={project._id}>{project.name}</option>\n                  ))}\n                </select>\n                <button onClick={() => handleSavePopup(document.getElementById(\"project-select\").value)}>Save</button>\n                <button onClick={handleClose}>Cancel</button>\n              </div>\n            </div>\n          </div>\n        )\n      }\n\n    const handleClick = (studentId) =>{\n        setSelectedStudent(studentId);\n        {studentId && renderPopup()}\n    }\n\n    const handleSavePopup = (projectId) => {\n        // Do something with the selected project and studentId\n        console.log(projectId, selectedStudent);\n        setSelectedStudent(null);\n      }\n\n    const handleClose = () => {\n        setSelectedStudent(null);\n    }\n    \n    return (\n        <div>\n          <table>\n            <thead>\n              <tr>\n                <th>Student Name</th>\n                <th>Student Email</th>\n                <th>Preferences Set</th>\n                <th>Assigned Project</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student) => (\n                <tr>\n                    <td>{student.name}</td>\n                    <td>{student.email}</td>\n                    <td>{isPreferenceSet(student._id)}</td>\n                    <td>{assignedProjectToStudent(student._id)}</td>\n                    <td>\n                      <button \n                        onClick={()=>handleClick(student._id)} \n                        disabled={!isAssignButtonEnabled(student._id)}\n                      >\n                        Assign\n                      </button> \n                    </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n    );\n}\n","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/courses/stages/StageOne.js",["227"],[],"import React, { useState } from 'react';\nimport \"../../../styles/StageOne.css\"\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function StageOne({data, setData}) {\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(false);\n  const [maxPreferences, setMaxPreferences] = useState('');\n  const [numStudentsPerProject, setNumStudentsPerProject] = useState('');\n  const [deadline, setDeadline] = useState('');\n\n  const handleSubmit = async() => {\n    // Save data and close the form\n    if (!data.projects) {\n      console.log(\"Please add projects into the course\");\n      return;\n    }\n\n    if (maxPreferences && numStudentsPerProject && deadline) {\n      try {\n            const response = await axios.post(\"/api/courses/assign\", {name:data.name ,maxPreferences:maxPreferences ,maxStudentsPerProject:numStudentsPerProject, preferencesDeadline: deadline }, {headers: {'Content-Type': 'application/json',}});\n            setData(response.data);\n            handleClose();\n        } catch (err) {\n            switch(err.response.status) {\n                case 401:\n                    navigate(\"/signin\", {replace: true});\n                    handleClose();\n                    break;\n                case 400:\n                    console.log(\"course couldnt be found\");\n                    break;\n                case 500:\n                    console.log(\"internal error\");\n                    break;\n            }\n        }\n    } else {\n      console.log(\"missing course details\"); \n    }\n  };\n\n  const handleClose = () => {\n    // Reset form data and close the form\n    setMaxPreferences('');\n    setNumStudentsPerProject('');\n    setDeadline('');\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <button onClick={() => setOpen(true)}>Open Form</button>\n      {open && (\n        <div className=\"form-popup\">\n          <div className=\"form-container\">\n            <h2>Project Preferences</h2>\n            <label htmlFor=\"maxPreferences\">\n              Max Preferences for a Student:\n              <input\n                type=\"text\"\n                id=\"maxPreferences\"\n                value={maxPreferences}\n                onChange={(e) => setMaxPreferences(e.target.value)}\n              />\n            </label>\n            <label htmlFor=\"numStudentsPerProject\">\n              Maximum Number of Students per Project:\n              <input\n                type=\"text\"\n                id=\"numStudentsPerProject\"\n                value={numStudentsPerProject}\n                onChange={(e) => setNumStudentsPerProject(e.target.value)}\n              />\n            </label>\n            <label htmlFor=\"deadline\">\n              Deadline:\n              <input\n                type=\"date\"\n                id=\"deadline\"\n                value={deadline}\n                onChange={(e) => setDeadline(e.target.value)}\n              />\n            </label>\n            <div className=\"form-buttons\">\n              <button onClick={handleSubmit}>Save</button>\n              <button onClick={handleClose}>Close</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/ErrorMessagePopup.js",[],[],"/Users/cpms/Desktop/Capstone-Project-Management-System/client_side/src/components/forms/CreateCourseForm.js",[],[],{"ruleId":"228","severity":1,"message":"229","line":38,"column":13,"nodeType":"230","messageId":"231","endLine":38,"endColumn":17},{"ruleId":"232","severity":1,"message":"233","line":30,"column":6,"nodeType":"234","endLine":30,"endColumn":12,"suggestions":"235"},{"ruleId":"228","severity":1,"message":"236","line":1,"column":8,"nodeType":"230","messageId":"231","endLine":1,"endColumn":14},{"ruleId":"228","severity":1,"message":"237","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":14},{"ruleId":"228","severity":1,"message":"237","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":14},{"ruleId":"228","severity":1,"message":"236","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":14},{"ruleId":"228","severity":1,"message":"229","line":29,"column":11,"nodeType":"230","messageId":"231","endLine":29,"endColumn":15},{"ruleId":"232","severity":1,"message":"238","line":14,"column":19,"nodeType":"239","endLine":28,"endColumn":4},{"ruleId":"240","severity":1,"message":"241","line":16,"column":5,"nodeType":"242","messageId":"243","endLine":27,"endColumn":6},{"ruleId":"232","severity":1,"message":"244","line":28,"column":6,"nodeType":"234","endLine":28,"endColumn":8,"suggestions":"245"},{"ruleId":"240","severity":1,"message":"241","line":34,"column":13,"nodeType":"242","messageId":"243","endLine":48,"endColumn":18},{"ruleId":"246","severity":1,"message":"247","line":56,"column":39,"nodeType":"248","endLine":56,"endColumn":66},{"ruleId":"240","severity":1,"message":"241","line":47,"column":7,"nodeType":"242","messageId":"243","endLine":66,"endColumn":8},{"ruleId":"240","severity":1,"message":"241","line":185,"column":7,"nodeType":"242","messageId":"243","endLine":204,"endColumn":8},{"ruleId":"232","severity":1,"message":"249","line":31,"column":6,"nodeType":"234","endLine":31,"endColumn":8,"suggestions":"250"},{"ruleId":"228","severity":1,"message":"251","line":35,"column":12,"nodeType":"230","messageId":"231","endLine":35,"endColumn":24},{"ruleId":"228","severity":1,"message":"252","line":37,"column":14,"nodeType":"230","messageId":"231","endLine":37,"endColumn":30},{"ruleId":"228","severity":1,"message":"253","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"254","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":25},{"ruleId":"228","severity":1,"message":"255","line":16,"column":19,"nodeType":"230","messageId":"231","endLine":16,"endColumn":27},{"ruleId":"228","severity":1,"message":"253","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"256","line":6,"column":11,"nodeType":"230","messageId":"231","endLine":6,"endColumn":19},{"ruleId":"257","severity":1,"message":"258","line":94,"column":9,"nodeType":"259","messageId":"260","endLine":94,"endColumn":37},{"ruleId":"240","severity":1,"message":"241","line":26,"column":13,"nodeType":"242","messageId":"243","endLine":37,"endColumn":14},"no-unused-vars","'role' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["261"],"'Footer' is defined but never used.","'Navbar' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook React.useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["262"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook React.useEffect has a missing dependency: 'clients'. Either include it or remove the dependency array.",["263"],"'selectedDate' is assigned a value but never used.","'handleDateChange' is defined but never used.","'useState' is defined but never used.","'ErrorMessagePopup' is defined but never used.","'response' is assigned a value but never used.","'navigate' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},"Update the dependencies array to be: [name, navigate]",{"range":"270","text":"271"},"Update the dependencies array to be: [navigate]",{"range":"272","text":"273"},"Update the dependencies array to be: [clients]",{"range":"274","text":"275"},[978,984],"[name, navigate]",[910,912],"[navigate]",[902,904],"[clients]"]